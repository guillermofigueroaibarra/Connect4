 // After the piece is dropped, it will check in all directions for 3 more consecutive pieces
    public boolean checkWinner() {
        for (int row = 0; row < ROWS; row++) {
            for (int col = 0; col < COLS; col++) {
                char piece = board[row][col];
                if (piece != empty) {
                    // Check horizontally (left and right)
                    if (col + 3 < COLS &&
                            piece == board[row][col + 1] &&
                            piece == board[row][col + 2] &&
                            piece == board[row][col + 3]) {
                        return true;
                    }
                    // Check vertically (up and down)
                    if (row + 3 < ROWS &&
                            piece == board[row + 1][col] &&
                            piece == board[row + 2][col] &&
                            piece == board[row + 3][col]) {
                        return true;
                    }
                    // Check diagonally (positive slope)
                    if (row + 3 < ROWS && col + 3 < COLS &&
                            piece == board[row + 1][col + 1] &&
                            piece == board[row + 2][col + 2] &&
                            piece == board[row + 3][col + 3]) {
                        return true;
                    }
                    // Check diagonally (negative slope)
                    if (row - 3 >= 0 && col + 3 < COLS &&
                            piece == board[row - 1][col + 1] &&
                            piece == board[row - 2][col + 2] &&
                            piece == board[row - 3][col + 3]) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
